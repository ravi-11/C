#include <stdlib.h>
#include <stdio.h>
/*************************************/
#define SIZE 30
/*************************************/ 
//Node template
struct Node
{
         char data[SIZE];
         struct Node *next;
};
/*************************************/
//prototypes
void instructions();
void insertNode(struct Node **headPtrRef, char info[]);
void deleteNode(struct Node *head);
void printList(struct Node *head);
/*************************************/
void instructions()
{
        printf("Enter 0 to exit the program\n"
                "1 to insert a node to the linked list\n"
                "2 to delete a node from the list\n"
                "3 to quick sort the list\n"
                "4 to merge sort the list\n");
}
/*************************************/
void insertNode(struct Node **headPtrRef,char info[])
{
        //new node for adding to the list
        struct Node *newNode;
        //ptr for current position within the list
        struct Node *currentPtr = *headPtrRef;
 
        //allocating memory for the new node to the list
        newNode = (struct Node *)malloc(sizeof(newNode));
 
 	//if a list does not exist
        if(*headPtrRef == NULL)
        {
                *headPtrRef = newNode;
                newNode->data[SIZE] = info[SIZE]; 
                newNode->next = NULL;
                return;
        }
        //if a list exists
	else
        {
                //traversing list to the end
                while(currentPtr != NULL)
                {
                        //moving to the next node
                        currentPtr = currentPtr->next;
                }
		//when reached end of list then
                //add the new node info and linker now
		currentPtr->data[SIZE] = info[SIZE];
                currentPtr->next = NULL;
        }
        return;
}
/**************************************/
void deleteNode(struct Node *head) 
{
  
 }
 /**************************************/
 void printList(struct Node *head)
 {
         while(head != NULL)
         {
                 //printing the contents
                 printf("%s",head->data[SIZE]);
                 printf("->");
                 //then moving to the next node
                 head = head->next;
         }
 
         printf("\n");
         return;
 }
 /*************************************/
 int main()
 {
         struct Node *head = NULL;
         char infoIn[SIZE];
 
         int choice = 0;
         printf("Enter an integer to continue:\n");
  
         instructions();
         scanf("%d", &choice);
 
         while(choice != 0)
         {
                 switch(choice)
                 {
                         case 1:
                                 printf("Enter a word to the list\n");
                                 scanf("%s",infoIn[SIZE-1]);
                                 insertNode(&head,infoIn);
                                 printList(head);
                                 instructions();
                                 scanf("%d", &choice);
                                 break;
                         case 2:
                                 instructions();
                                 scanf("%d", &choice);
                                 break;
                         case 3:
                                 instructions();
                                 scanf("%d", &choice);
                                 break;
                         case 4:
                                 instructions();
                                 scanf("%d", &choice);
                                 break;
                         default:
                                 printf("Invalid choice, try again\n");
                                 instructions();
                                 scanf("%d", &choice);
                                 break;
                 }
         }
         printf("End of run\n");
         return 0;
}
/****************************************/
